# Exarch Scripts Installation Profiles
# Pre-configured installation profiles for different use cases

# Profile: All (a) - Install everything
PROFILE_ALL_ENABLED=(
  "INSTALL_GOOGLE_CHROME=true"
  "INSTALL_FIREFOX=true"
  "INSTALL_COPYQ=true"
  "INSTALL_DROPBOX=true"
  "INSTALL_AWS_VPN=true"
  "INSTALL_1PASSWORD=true"
  "INSTALL_1PASSWORD_CLI=true"
  "INSTALL_POSTMAN=true"
  "INSTALL_REMMINA=true"
  "INSTALL_ESPANSO=true"
  "INSTALL_NANO=true"
  "INSTALL_MICRO=true"
  "INSTALL_KATE=true"
  "INSTALL_SLACK=true"
  "INSTALL_TEAMS=true"
  "INSTALL_JB_TOOLBOX=true"
  "INSTALL_JB_RIDER=true"
  "INSTALL_JB_DATAGRIP=true"
  "INSTALL_CURSOR=true"
  "INSTALL_VSCODE=true"
  "INSTALL_WINDSURF=true"
  "INSTALL_MISE_RUNTIMES=true"
  "INSTALL_CLAUDE_CODE=true"
  "INSTALL_CODEX_CLI=true"
  "INSTALL_GEMINI_CLI=true"
  "SYNC_HYPR_CONFIGS=true"
  "SETUP_DELL_XPS_WEBCAM=true"
  "SETUP_DELL_XPS_POWER=true"
  "SETUP_DELL_XPS_KEYBOARD=true"
  "SETUP_DELL_XPS_UTILITIES=true"
  "SETUP_DELL_XPS_SHUTDOWN=true"
  "SETUP_DELL_XPS_KERNEL=true"
  "INSTALL_CHEZMOI=true"
  "INSTALL_AGE=true"
  "SETUP_DOTFILES_MANAGEMENT=true"
  "SETUP_DEV_PGPASS=true"
  "SETUP_SSH_KEYS=true"
)

# Profile: Recommended (r) - Most commonly used packages
PROFILE_RECOMMENDED_ENABLED=(
  "INSTALL_GOOGLE_CHROME=true"
  "INSTALL_FIREFOX=true"
  "INSTALL_COPYQ=true"
  "INSTALL_1PASSWORD=true"
  "INSTALL_1PASSWORD_CLI=true"
  "INSTALL_POSTMAN=true"
  "INSTALL_REMMINA=true"
  "INSTALL_NANO=true"
  "INSTALL_MICRO=true"
  "INSTALL_KATE=true"
  "INSTALL_CURSOR=true"
  "INSTALL_VSCODE=true"
  "INSTALL_MISE_RUNTIMES=true"
  "INSTALL_CLAUDE_CODE=true"
  "SYNC_HYPR_CONFIGS=true"
  "INSTALL_CHEZMOI=true"
  "SETUP_DEV_PGPASS=false"
  "SETUP_SSH_KEYS=true"
)

PROFILE_RECOMMENDED_DISABLED=(
  "INSTALL_DROPBOX=false"
  "INSTALL_AWS_VPN=false"
  "INSTALL_1PASSWORD=false"
  "INSTALL_1PASSWORD_CLI=false"
  "INSTALL_ESPANSO=false"
  "INSTALL_SLACK=false"
  "INSTALL_TEAMS=false"
  "INSTALL_JB_TOOLBOX=false"
  "INSTALL_JB_RIDER=false"
  "INSTALL_JB_DATAGRIP=false"
  "INSTALL_WINDSURF=false"
  "INSTALL_CODEX_CLI=false"
  "INSTALL_GEMINI_CLI=false"
  "SETUP_DELL_XPS_WEBCAM=false"
  "SETUP_DELL_XPS_POWER=false"
  "SETUP_DELL_XPS_KEYBOARD=false"
  "SETUP_DELL_XPS_UTILITIES=false"
  "SETUP_DELL_XPS_SHUTDOWN=false"
  "SETUP_DELL_XPS_KERNEL=false"
  "INSTALL_AGE=false"
  "SETUP_DOTFILES_MANAGEMENT=false"
)

# Profile: Development (d) - Development-focused installation
PROFILE_DEVELOPMENT_ENABLED=(
  "INSTALL_GOOGLE_CHROME=true"
  "INSTALL_FIREFOX=true"
  "INSTALL_1PASSWORD=true"
  "INSTALL_1PASSWORD_CLI=true"
  "INSTALL_POSTMAN=true"
  "INSTALL_REMMINA=true"
  "INSTALL_NANO=true"
  "INSTALL_MICRO=true"
  "INSTALL_KATE=true"
  "INSTALL_JB_RIDER=true"
  "INSTALL_JB_DATAGRIP=true"
  "INSTALL_CURSOR=true"
  "INSTALL_VSCODE=true"
  "INSTALL_WINDSURF=true"
  "INSTALL_MISE_RUNTIMES=true"
  "INSTALL_CLAUDE_CODE=true"
  "INSTALL_CODEX_CLI=true"
  "SYNC_HYPR_CONFIGS=true"
  "INSTALL_CHEZMOI=true"
  "INSTALL_AGE=true"
  "SETUP_DOTFILES_MANAGEMENT=true"
  "SETUP_SSH_KEYS=true"
  # Note: SETUP_DEV_PGPASS is now installed conditionally when needed
)

PROFILE_DEVELOPMENT_DISABLED=(
  "INSTALL_COPYQ=false"
  "INSTALL_DROPBOX=false" 
  "INSTALL_AWS_VPN=false"
  "INSTALL_1PASSWORD=false"
  "INSTALL_1PASSWORD_CLI=false"
  "INSTALL_ESPANSO=false"
  "INSTALL_SLACK=false"
  "INSTALL_TEAMS=false"
  "INSTALL_JB_TOOLBOX=false"
  "INSTALL_GEMINI_CLI=false"
  "SETUP_DELL_XPS_WEBCAM=false"
  "SETUP_DELL_XPS_POWER=false"
  "SETUP_DELL_XPS_KEYBOARD=false"
  "SETUP_DELL_XPS_UTILITIES=false"
  "SETUP_DELL_XPS_SHUTDOWN=false"
  "SETUP_DELL_XPS_KERNEL=false"
)

# Profile: Minimal (m) - Minimal installation
PROFILE_MINIMAL_ENABLED=(
  "INSTALL_FIREFOX=true"
  "INSTALL_NANO=true"
  "INSTALL_MICRO=true"
  "INSTALL_VSCODE=true"
  "INSTALL_MISE_RUNTIMES=true"
  "SYNC_HYPR_CONFIGS=true"
  "SETUP_SSH_KEYS=true"
)

PROFILE_MINIMAL_DISABLED=(
  "INSTALL_GOOGLE_CHROME=false"
  "INSTALL_COPYQ=false"
  "INSTALL_DROPBOX=false"
  "INSTALL_AWS_VPN=false"
  "INSTALL_1PASSWORD=false"
  "INSTALL_1PASSWORD_CLI=false"
  "INSTALL_POSTMAN=false"
  "INSTALL_REMMINA=false"
  "INSTALL_ESPANSO=false"
  "INSTALL_KATE=false"
  "INSTALL_SLACK=false"
  "INSTALL_TEAMS=false"
  "INSTALL_JB_TOOLBOX=false"
  "INSTALL_JB_RIDER=false"
  "INSTALL_JB_DATAGRIP=false"
  "INSTALL_CURSOR=false"
  "INSTALL_WINDSURF=false"
  "INSTALL_CLAUDE_CODE=false"
  "INSTALL_CODEX_CLI=false"
  "INSTALL_GEMINI_CLI=false"
  "SETUP_DELL_XPS_WEBCAM=false"
  "SETUP_DELL_XPS_POWER=false"
  "SETUP_DELL_XPS_KEYBOARD=false"
  "SETUP_DELL_XPS_UTILITIES=false"
  "SETUP_DELL_XPS_SHUTDOWN=false"
  "SETUP_DELL_XPS_KERNEL=false"
  "INSTALL_CHEZMOI=false"
  "INSTALL_AGE=false"
  "SETUP_DOTFILES_MANAGEMENT=false"
  "SETUP_DEV_PGPASS=false"
)

# Profile: Dell XPS (x) - Dell XPS 13 Plus optimized
PROFILE_DELL_XPS_ENABLED=(
  "INSTALL_GOOGLE_CHROME=true"
  "INSTALL_FIREFOX=true"
  "INSTALL_COPYQ=true"
  "INSTALL_POSTMAN=true"
  "INSTALL_REMMINA=true"
  "INSTALL_NANO=true"
  "INSTALL_MICRO=true"
  "INSTALL_CURSOR=true"
  "INSTALL_VSCODE=true"
  "INSTALL_MISE_RUNTIMES=true"
  "INSTALL_CLAUDE_CODE=true"
  "SYNC_HYPR_CONFIGS=true"
  "SETUP_DELL_XPS_WEBCAM=true"
  "SETUP_DELL_XPS_POWER=true"
  "SETUP_DELL_XPS_KEYBOARD=true"
  "SETUP_DELL_XPS_UTILITIES=true"
  "SETUP_DELL_XPS_SHUTDOWN=true"
  "SETUP_DELL_XPS_KERNEL=true"
  "INSTALL_CHEZMOI=true"
)

PROFILE_DELL_XPS_DISABLED=(
  "INSTALL_DROPBOX=false"
  "INSTALL_AWS_VPN=false"
  "INSTALL_ESPANSO=false"
  "INSTALL_SLACK=false"
  "INSTALL_TEAMS=false"
  "INSTALL_JB_TOOLBOX=false"
  "INSTALL_JB_RIDER=false"
  "INSTALL_JB_DATAGRIP=false"
  "INSTALL_WINDSURF=false"
  "INSTALL_CODEX_CLI=false"
  "INSTALL_GEMINI_CLI=false"
  "INSTALL_AGE=false"
  "SETUP_DOTFILES_MANAGEMENT=false"
  "SETUP_DEV_PGPASS=false"
)

# Profile descriptions for menu
PROFILE_DESCRIPTIONS=(
  "a:All packages and features (complete installation)"
  "r:Recommended packages (most commonly used)"
  "d:Development focused (IDEs, tools, 1Password integration)"
  "m:Minimal installation (essential tools only)"
  "x:Dell XPS optimized (hardware-specific optimizations)"
)

# Function to apply a profile
apply_profile() {
  local profile="$1"
  
  case "$profile" in
    "a"|"all")
      info "Applying 'All' profile..."
      for setting in "${PROFILE_ALL_ENABLED[@]}"; do
        eval "$setting"
      done
      ;;
    "r"|"recommended")
      info "Applying 'Recommended' profile..."
      for setting in "${PROFILE_RECOMMENDED_ENABLED[@]}"; do
        eval "$setting"
      done
      for setting in "${PROFILE_RECOMMENDED_DISABLED[@]}"; do
        eval "$setting"
      done
      ;;
    "d"|"development")
      info "Applying 'Development' profile..."
      for setting in "${PROFILE_DEVELOPMENT_ENABLED[@]}"; do
        eval "$setting"
      done
      for setting in "${PROFILE_DEVELOPMENT_DISABLED[@]}"; do
        eval "$setting"
      done
      ;;
    "m"|"minimal")
      info "Applying 'Minimal' profile..."
      for setting in "${PROFILE_MINIMAL_ENABLED[@]}"; do
        eval "$setting"
      done
      for setting in "${PROFILE_MINIMAL_DISABLED[@]}"; do
        eval "$setting"
      done
      ;;
    "x"|"dell-xps")
      info "Applying 'Dell XPS' profile..."
      for setting in "${PROFILE_DELL_XPS_ENABLED[@]}"; do
        eval "$setting"
      done
      for setting in "${PROFILE_DELL_XPS_DISABLED[@]}"; do
        eval "$setting"
      done
      ;;
    *)
      warn "Unknown profile: $profile"
      return 1
      ;;
  esac
  
  success "Profile '$profile' applied successfully"
  return 0
}

# Function to show available profiles
show_available_profiles() {
  echo
  echo -e "${BOLD}Available Profiles:${NC}"
  echo "==================="
  
  for desc in "${PROFILE_DESCRIPTIONS[@]}"; do
    local key="${desc%%:*}"
    local description="${desc#*:}"
    echo -e "  ${CYAN}$key${NC} - $description"
  done
  
  echo
}

# Function to get profile packages count
get_profile_packages_count() {
  local profile="$1"
  local count=0
  
  case "$profile" in
    "a"|"all")
      count=${#PROFILE_ALL_ENABLED[@]}
      ;;
    "r"|"recommended") 
      count=$((${#PROFILE_RECOMMENDED_ENABLED[@]} + ${#PROFILE_RECOMMENDED_DISABLED[@]}))
      ;;
    "d"|"development")
      count=$((${#PROFILE_DEVELOPMENT_ENABLED[@]} + ${#PROFILE_DEVELOPMENT_DISABLED[@]}))
      ;;
    "m"|"minimal")
      count=$((${#PROFILE_MINIMAL_ENABLED[@]} + ${#PROFILE_MINIMAL_DISABLED[@]}))
      ;;
    "x"|"dell-xps")
      count=$((${#PROFILE_DELL_XPS_ENABLED[@]} + ${#PROFILE_DELL_XPS_DISABLED[@]}))
      ;;
  esac
  
  echo "$count"
}

# Export profile functions
export -f apply_profile show_available_profiles get_profile_packages_count